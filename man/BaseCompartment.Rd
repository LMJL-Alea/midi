% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/base-compartment.R
\name{BaseCompartment}
\alias{BaseCompartment}
\title{Base compartment class}
\description{
The base class for compartment models.
}
\examples{

## ------------------------------------------------
## Method `BaseCompartment$get_signal`
## ------------------------------------------------

freeComp <- FreeCompartment$new()
freeComp$get_signal(small_delta = 30, big_delta = 30, G = 0.040e-3)

sphereComp <- SphereCompartment$new()
sphereComp$get_signal(small_delta = 30, big_delta = 30, G = 0.040e-3)

sodermanComp <- SodermanCompartment$new()
sodermanComp$get_signal(small_delta = 30, big_delta = 30, G = 0.040e-3)

staniszComp <- StaniszCompartment$new(
  radius = 1e-6,
  diffusivity = 2.0e-9
)
staniszComp$get_signal(0.03, 0.03, 0.040)

neumanComp <- NeumanCompartment$new(
  radius = 1e-6,
  diffusivity = 2.0e-9
)
neumanComp$get_signal(0.03, 0.03, 0.040, echo_time = 0.040)

callaghanComp <- CallaghanCompartment$new(
  radius = 1e-6,
  diffusivity = 2.0e-9
)
callaghanComp$get_signal(0.03, 0.03, 0.040)

vanGelderenComp <- VanGelderenCompartment$new(
  radius = 1e-6,
  diffusivity = 2.0e-9
)
vanGelderenComp$get_signal(0.03, 0.03, 0.040)

## ------------------------------------------------
## Method `BaseCompartment$get_parameter_names`
## ------------------------------------------------

freeComp <- FreeCompartment$new()
freeComp$get_parameter_names()

## ------------------------------------------------
## Method `BaseCompartment$get_parameter_values`
## ------------------------------------------------

freeComp <- FreeCompartment$new()
freeComp$get_parameter_values()
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-BaseCompartment-get_signal}{\code{BaseCompartment$get_signal()}}
\item \href{#method-BaseCompartment-get_parameter_names}{\code{BaseCompartment$get_parameter_names()}}
\item \href{#method-BaseCompartment-get_parameter_values}{\code{BaseCompartment$get_parameter_values()}}
\item \href{#method-BaseCompartment-clone}{\code{BaseCompartment$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseCompartment-get_signal"></a>}}
\if{latex}{\out{\hypertarget{method-BaseCompartment-get_signal}{}}}
\subsection{Method \code{get_signal()}}{
Computes the signal attenuation predicted by the model.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseCompartment$get_signal(
  small_delta,
  big_delta,
  G,
  echo_time = NULL,
  n_max = 20L,
  m_max = 50L
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{small_delta}}{A numeric value specifying the duration of the
gradient pulse in milliseconds.}

\item{\code{big_delta}}{A numeric value specifying the duration between the
gradient pulses in milliseconds.}

\item{\code{G}}{A numeric value specifying the strength of the gradient in
mT.\eqn{\mu}m\eqn{^{-1}}.}

\item{\code{echo_time}}{A numeric value specifying the echo time in
milliseconds.}

\item{\code{n_max}}{An integer value specifying the maximum order of the Bessel
function. Defaults to \code{20L}.}

\item{\code{m_max}}{An integer value specifying the maximum number of extrema
for the Bessel function. Defaults to \code{50L}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A numeric value storing the predicted signal attenuation.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{freeComp <- FreeCompartment$new()
freeComp$get_signal(small_delta = 30, big_delta = 30, G = 0.040e-3)

sphereComp <- SphereCompartment$new()
sphereComp$get_signal(small_delta = 30, big_delta = 30, G = 0.040e-3)

sodermanComp <- SodermanCompartment$new()
sodermanComp$get_signal(small_delta = 30, big_delta = 30, G = 0.040e-3)

staniszComp <- StaniszCompartment$new(
  radius = 1e-6,
  diffusivity = 2.0e-9
)
staniszComp$get_signal(0.03, 0.03, 0.040)

neumanComp <- NeumanCompartment$new(
  radius = 1e-6,
  diffusivity = 2.0e-9
)
neumanComp$get_signal(0.03, 0.03, 0.040, echo_time = 0.040)

callaghanComp <- CallaghanCompartment$new(
  radius = 1e-6,
  diffusivity = 2.0e-9
)
callaghanComp$get_signal(0.03, 0.03, 0.040)

vanGelderenComp <- VanGelderenCompartment$new(
  radius = 1e-6,
  diffusivity = 2.0e-9
)
vanGelderenComp$get_signal(0.03, 0.03, 0.040)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseCompartment-get_parameter_names"></a>}}
\if{latex}{\out{\hypertarget{method-BaseCompartment-get_parameter_names}{}}}
\subsection{Method \code{get_parameter_names()}}{
Returns the names of the compartment parameters
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseCompartment$get_parameter_names()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A character vector storing the names of the compartment
parameters.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{freeComp <- FreeCompartment$new()
freeComp$get_parameter_names()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseCompartment-get_parameter_values"></a>}}
\if{latex}{\out{\hypertarget{method-BaseCompartment-get_parameter_values}{}}}
\subsection{Method \code{get_parameter_values()}}{
Returns the values of the compartment parameters
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseCompartment$get_parameter_values()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A numeric vector storing the values of the compartment
parameters.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{freeComp <- FreeCompartment$new()
freeComp$get_parameter_values()
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-BaseCompartment-clone"></a>}}
\if{latex}{\out{\hypertarget{method-BaseCompartment-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{BaseCompartment$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
